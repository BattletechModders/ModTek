<!-- Use the modern .NET Sdk csproj style, avoids lots of boilerplace configuration -->
<Project Sdk="Microsoft.NET.Sdk" InitialTargets="ValidateBattleTechGameDir">
  <!-- Check if the BattleTechGameDir variable is correctly set -->
  <Target Name="ValidateBattleTechGameDir" Condition="'$(BattleTechGameDir)' == '' Or !Exists('$(BattleTechGameDir)')">
    <Error Text="BattleTechGameDir variable not set properly" />
  </Target>

  <PropertyGroup>
    <!-- All mods and utilites are libraries and produce a dll -->
    <OutputType>Library</OutputType>
    <!-- The latest BattleTech game version uses .NET Framework 4.7.1, newer target frameworks won't work -->
    <TargetFramework>net471</TargetFramework>
    <!-- Set to a modern version, some newer language feature are not available in combination with .NET Framework -->
    <LangVersion>11</LangVersion>
    <!-- We ask msbuild to only use reference DLLs found the BattleTech Managed directory -->
    <AssemblySearchPaths>
      {HintPathFromItem};
      $(BattleTechGameDir)\BattleTech_Data\Managed
    </AssemblySearchPaths>
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
    <!-- embed symbols into the dll -->
    <DebugType>embedded</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <Link Include="$(BattleTechGameDir)\Mods\.modtek\*.log*" />
  </ItemGroup>
  
  <!-- Copy the mod dll to the BT game dir if the mod directory exists there -->
  <Target Condition="Exists('$(BattleTechGameDir)\Mods\$(ProjectName)\')" Name="CopyFilesToGame" AfterTargets="CopyFilesToOutputDirectory">
    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(BattleTechGameDir)\Mods\$(ProjectName)\" />
    <Copy SourceFiles="mod.json" DestinationFolder="$(BattleTechGameDir)\Mods\$(ProjectName)\" />
  </Target>

  <PropertyGroup>
    <!-- avoids IgnoresAccessChecksToAttribute warnings -->
    <PublicizerRuntimeStrategies>Unsafe</PublicizerRuntimeStrategies>
  </PropertyGroup>
  <ItemGroup>
    <!-- Allows to access internal and private members without Harmony Traverse, do not use if inheriting from classes made public -->
    <PackageReference Include="Krafs.Publicizer" Version="2.2.1" />
    <!-- Main game library, best to publicize it to access internals easily and efficiently -->
    <Publicize Include="Assembly-CSharp" />
  </ItemGroup>

  <ItemGroup>
    <!-- Automatically set the version number of your assembly based on git tags and semver -->
    <PackageReference Include="GitVersion.MsBuild" Version="5.12.0">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>

    <!-- Harmony is needed to hook into the game -->
    <PackageReference Include="HarmonyX" Version="2.10.1">
      <PrivateAssets>All</PrivateAssets>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>

    <!-- Enables many newer language features for .NET Framework -->
    <PackageReference Include="PolySharp" Version="1.13.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <!-- Important system libraries that are basically always used -->
    <Reference Include="System">
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Core">
      <Private>False</Private>
    </Reference>

    <!-- Main game library, best to publicize it to access internals easily and efficently -->
    <Reference Include="Assembly-CSharp">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
</Project>